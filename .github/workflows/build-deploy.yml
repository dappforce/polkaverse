name: build and deploy web app
on:
  push:
    branches:
      - staging
      - main

jobs:
  front_build:
    name: build & Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Extract branch name
        shell: bash
        run: echo "name=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV        
        id: extract_branch

      - name: Prepare
        id: prep
        run: |
          echo "image=dappforce/subsocial-web-app:${{ env.name }}-$(echo $GITHUB_SHA | head -c7)" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        uses: docker/login-action@master
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-single-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-single-buildx

      - if: ${{ github.ref == 'refs/heads/staging' }}
        name: Build staging image
        uses: docker/build-push-action@v3
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          file: docker/Dockerfile
          push: true
          build-args: |
                  GH_SUBSTRATE_URL=wss://para.f3joule.space
                  GH_SUBSTRATE_RPC_URL=https://rco-para.subsocial.network/http
                  GH_OFFCHAIN_URL=https://staging-api.subsocial.network
                  GH_IPFS_NODE_URL=https://ipfs.subsocial.network
                  GH_GA_ID=fake
                  GH_APP_KIND=staging
                  GH_CONNECTION_KIND=dev

          tags: |
                  ${{ env.image }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - if: ${{ github.ref == 'refs/heads/main' }}
        name: Build production image
        uses: docker/build-push-action@v3
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          file: docker/Dockerfile
          push: true
          build-args: |
                  GH_SUBSTRATE_URL=wss://para.f3joule.space
                  GH_SUBSTRATE_RPC_URL=https://para.subsocial.network
                  GH_OFFCHAIN_URL=https://api.subsocial.network
                  GH_IPFS_NODE_URL=https://ipfs.subsocial.network
                  GH_GA_ID=UA-204866512-2
                  GH_APP_KIND=subsocial
                  GH_CONNECTION_KIND=main

          tags: |
                  ${{ env.image }}
                  docker.io/dappforce/subsocial-web-app:master-latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new


      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache


  staging_deploy:
    name: staging-deploy
    needs: front_build
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/staging' }}
    steps:
      - name: Checkout main
        uses: actions/checkout@v3

      - name: Extract branch name
        shell: bash
        run: echo "name=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV        
        id: extract_branch

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN_STAGING }}

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 c7e84602-9029-40ed-9f95-6c113f6693ee

      - name: Update deploy file
        run: TAG=${{ env.name }}-$(echo $GITHUB_SHA | head -c7) && sed -i 's|<IMAGE>|dappforce/subsocial-web-app:'${TAG}'|' $GITHUB_WORKSPACE/deployment/base/deployment.yaml
      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl apply -k $GITHUB_WORKSPACE/deployment/overlays/staging/

      - name: Verify deployment
        run: kubectl -n sub-back rollout status deployment/web-app


  pro_deploy:
    name: pro-deploy
    needs: front_build
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout main
        uses: actions/checkout@v3

      - name: Extract branch name
        shell: bash
        run: echo "name=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV        
        id: extract_branch

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN_PROD }}

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 a4862333-a4d0-4e2c-b688-fcb90312d14e

      - name: Update deploy file
        run: TAG=${{ env.name }}-$(echo $GITHUB_SHA | head -c7) && sed -i 's|<IMAGE>|dappforce/subsocial-web-app:'${TAG}'|' $GITHUB_WORKSPACE/deployment/base/deployment.yaml

      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl apply -k $GITHUB_WORKSPACE/deployment/overlays/production/

      - name: Verify deployment
        run: kubectl -n sub-back rollout status deployment/web-app

      - name: add replicas
        run: kubectl -n sub-back scale deployment/web-app --replicas=4

      - name: Verify deployment
        run: kubectl -n sub-back rollout status deployment/web-app

  front-bk-prod-deploy:
    name: bk-prod-deploy
    needs: front_build
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout main
        uses: actions/checkout@v3

      - name: Extract branch name
        shell: bash
        run: echo "name=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV        
        id: extract_branch

      - name: executing remote ssh commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.BACKUP_HOST }}
          username: ${{ secrets.BACKUP_USERNAME }}
          key: ${{ secrets.BACKUP_KEY }}
          port: ${{ secrets.BACKUP_PORT }}
          script: |
            cd /root/webapp
            ./update.sh
