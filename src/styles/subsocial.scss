@import './fonts.scss';
@import './subsocial-vars.scss';
@import './editor.scss';

html {
  height: 100%;
  font-size: 16px;
}

body,
#root {
  height: 100%;
  background-color: $color_page_bg;
  color: $color_font_normal;
  font-size: $font_normal;
}

input[type='number']::-webkit-outer-spin-button,
input[type='number']::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
input[type='number'] {
  -moz-appearance: textfield;
}

.invisible {
  opacity: 0;
}
.visible {
  opacity: 1;
}

.UnboundedFont {
  font-family: 'Unbounded', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue',
    Arial, 'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol',
    'Noto Color Emoji';
}

#__next {
  height: 100%;
}

.astronaut-bg {
  &:before {
    background-image: url('/images/astronaut-bg.png') !important;
    background-size: cover;
    content: '';
    position: fixed;
    z-index: -1;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    opacity: 0.7;
  }

  .ant-layout {
    background: none;
  }
}

h1 {
  font-size: $space_huge;
}

h2 {
  font-size: $space_big;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  color: rgba(0, 0, 0, 0.6);
}

code,
pre {
  font-family: Consolas, Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono,
    Bitstream Vera Sans Mono, Courier New, monospace, sans-serif;
}

a {
  overflow-wrap: anywhere;
}

/* Common Resusable Classes */
/* ---------------------------------------- */

.grecaptcha-badge {
  z-index: 1001;
}

.SubsocialGradient {
  background: linear-gradient(#f10286, #c10aec);
  background-size: 100%;
  background-clip: text;
  -webkit-background-clip: text;
  -moz-background-clip: text;
  -webkit-text-fill-color: transparent;
  -moz-text-fill-color: transparent;
}

.CursorPointer {
  cursor: pointer !important;
}

.FontTiny {
  font-size: $font_tiny !important;
}

.FontSmall {
  font-size: $font_small !important;
}

.FontNormal {
  font-size: $font_normal !important;
}

.FontSemilarge {
  font-size: $font_semilarge;
}

.FontLarge {
  font-size: $font_large;
}

.FontBig {
  font-size: $font_big;
}

.ColorPrimary {
  color: $color_primary;
}
.ColorMuted {
  color: $color_muted;
}
.ColorWhite {
  color: white;
}

.GapMini {
  gap: $space_mini;
}

.GapTiny {
  gap: $space_tiny;
}

.GapSmall {
  gap: $space_small;
}

.GapNormal {
  gap: $space_normal;
}

.GapLarge {
  gap: $space_large;
}

.GapBig {
  gap: $space_big;
}

.GapHuge {
  gap: $space_huge;
}

.VertAlignMiddleChildren {
  > * {
    vertical-align: middle;
  }
}

.LineHeightNormal {
  line-height: $line-height-normal;
}

.LineHeightLoose {
  line-height: $line-height-loose;
}

.LineHeightRelaxed {
  line-height: $line-height-relaxed;
}

.NoWordBreak {
  word-break: keep-all !important;
}

.ColorCurrentColor {
  color: currentColor;
}

.RoundedNone {
  border-radius: 0 !important;
}

.RoundedNormal {
  border-radius: $border_radius_normal;
}
.RoundedLarge {
  border-radius: $border_radius_large;
}
.RoundedBig {
  border-radius: $border_radius_big;
}
.RoundedHuge {
  border-radius: $border_radius_huge;
}

.FontWeightMedium {
  font-weight: $font_weight_medium;
}
.FontWeightSemibold {
  font-weight: $font_weight_semibold;
}
.FontWeightBold {
  font-weight: $font_weight_bold;
}

.DfImagePreview {
  width: 100%;
}

.IconFontSize {
  font-size: 1.25rem;
  cursor: pointer;
}

.BorderNone {
  border: none !important;
}

.DfSegment {
  background-color: #fff;
  padding: $space_large;
  position: relative;
  border-radius: $border_radius_huge;
  @extend .DfBoxShadowLight;
}

.DfBalance {
  display: flex;
  color: $color_muted;
}

.DfBalanceDecimals {
  color: #999;
}

.font-weight-medium {
  font-weight: 500 !important;
}
.font-weight-semibold {
  font-weight: 600 !important;
}

.ant-modal-body {
  max-height: 70vh;
  overflow-y: auto;
  overflow-x: hidden;
}

.ant-modal-header,
.ant-modal-body,
.ant-modal-footer {
  padding: $space_normal;
  font-size: $font_normal;
}

.ant-descriptions-item-label {
  color: $color_muted;
}

.ant-tooltip {
  max-width: 350px;
}

.ant-descriptions-header {
  margin-bottom: $space_tiny;
  border-bottom: 1px solid $color_light_border;
}

.ant-modal-title {
  font-size: $font_large;
}

.ant-list-lg.ant-list-item {
  padding: 0;
}

.ant-descriptions-item-label {
  color: $color_muted;
}

.ant-tooltip {
  max-width: 350px;
}

.ant-popover-inner-content {
  max-width: 430px;
}

.ant-descriptions-header {
  margin-bottom: $space_tiny;
  border-bottom: 1px solid $color_light_border;
}

.ant-tabs {
  overflow: visible;
}
.ant-tabs-top > .ant-tabs-nav {
  margin-bottom: 0;
}

.DfLinkOnHover {
  &:hover {
    color: $color_link_hover !important;
    cursor: pointer;
    text-decoration: none;
  }
}

.DfMutedLink {
  color: $color_muted !important;
  @extend .DfLinkOnHover;
}

.DfBlackLink {
  color: $color_font_normal !important;
  @extend .DfLinkOnHover;
}

.DfBoldBlackLink {
  @extend .DfBlackLink;
  font-weight: 600;
}

.DfSeeMoreLink,
.DfSeeMore a {
  @extend .DfBoldBlackLink;
  white-space: nowrap;
  color: $color_muted;
}

.DfBoxShadow {
  -moz-box-shadow: $shadow;
  -webkit-box-shadow: $shadow;
  box-shadow: $shadow_light;
}

.DfBoxShadowLight {
  -moz-box-shadow: $shadow_light;
  -webkit-box-shadow: $shadow_light;
  box-shadow: $shadow_light;
}

.DfNoBoxShadow {
  $shadow: none !important;
  -moz-box-shadow: $shadow;
  -webkit-box-shadow: $shadow;
  box-shadow: $shadow;
}

.DfProfileModalLink {
  @extend .DfGreyLink;
  margin-right: $space_big;
}

.Screenshot {
  border: 1px solid $color_light_border;
  border-radius: $border_radius_normal;
  box-shadow: $shadow;
  display: inline-block;
  margin-top: $space_normal;
}

.ListSteps {
  li {
    margin-bottom: $space_normal;
  }
}

/* Other Styles */
/* ---------------------------------------- */

.header {
  margin: 0;
  line-height: normal;
  // display: flex !important;
  // align-items: center;
  font-size: $font_large;
  font-weight: 600;
}

.DfSideBar {
  .ant-drawer-content-wrapper {
    width: 275px !important;
  }

  position: fixed;
  z-index: 10;
  // top: $height_top_menu;
  // height: 93.5%;
  overflow: auto;
  overflow-x: hidden;
  -webkit-overflow-scrolling: touch;

  .ant-menu-item-active {
    .MenuItemName {
      color: $color_primary !important;
    }
  }

  .ant-menu-item-selected {
    .MenuItemName {
      color: $color_primary !important;
    }
  }

  .MenuItemName {
    color: $color_muted;
  }
}

.DfSideBar .am-drawer-sidebar {
  background-color: #fff;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
}

.ant-comment-content-author {
  // font-size: inherit;
  // line-height: inherit;
  margin-top: $space_tiny;
  margin-bottom: 0;
}

.am-drawer-content {
  padding-top: 0 !important;
  text-align: left !important;
}

.ant-layout-sider {
  background: #fff;
}

.ant-layout-sider-children {
  overflow: auto;
}

/* Used as a hack to fix ReactBase font-size */
.fontSizeNormal {
  font-size: $font_normal !important;
}

.DfPageContent {
  padding: $space_small $space_normal;
  overflow-wrap: break-word;
  margin: 0 auto;
  color: $color_font_normal;
}

.DfTags {
  .anticon {
    color: #bbb !important;
    margin-right: 0.35rem !important;
  }

  .ant-tag {
    font-size: 0.85rem;
    padding: 0.25rem 0.5rem;

    &:hover {
      background-color: #fff;
    }
  }

  a {
    @extend .DfLinkOnHover;
  }
}

.ui.search.selection.dropdown > .text {
  margin-left: 0;

  .ui--KeyPair {
    margin-left: 14.5%;
    width: 85.5%;

    .ui--IdentityIcon-Outer {
      left: -3.1rem !important;
      top: -0.7rem !important;
    }
  }
}

.DfClaimSpaceTag {
  cursor: pointer;
}

@media (min-width: 1200px) {
  .DfBrand {
    font-size: $font_normal;
  }
}

.DfBrand {
  font-size: $font_normal;
  color: $color_secondary;
  cursor: pointer;

  img {
    max-width: 150px;
    position: relative;
    top: 4px;
  }
}

.DfBrand:hover {
  color: $color_secondary;
}

.DfSummary {
  font-size: $font_normal;
  color: $color_font_normal;
  word-break: break-word;
  line-height: $line-height-normal;
  // margin: $space_small 0;
  /* white-space: pre-wrap; */
}
.-mt-2 {
  margin-top: -$space_small !important;
}

.DfBookPage {
  @extend .DfBoxShadow;
  margin: $space_small 0;
  padding: $space_normal;
  background-color: #fff;
  border-radius: $border_radius_normal;
}

.DfUnboundedTitle {
  @extend .UnboundedFont;
  @extend .font-weight-medium;
}

.DfPostTitle--preview {
  @extend .DfBoldBlackLink;
  @extend .DfUnboundedTitle;
  margin-bottom: $space_small;
}

.DfEntirePost {
  /* padding: 0 $space_tiny; */

  .DfPostContent {
    @extend .DfBookPage;
    @extend .DfBoxShadowLight;
    margin-top: $space_huge;
    margin-bottom: $space_small;
    padding: $space_big;
    border-radius: $border_radius_huge;

    .DfSharedSummary .DfPostPreview {
      box-shadow: none !important;
      border: 1px solid $color_light_border;
    }

    .markdown-body {
      line-height: $line-height-relaxed;

      h1,
      h2,
      h3,
      h4,
      h5,
      h6 {
        color: currentColor;
      }

      // the font size is changed individually because if you change font-size of .markdown-body,
      // the h1, h2, h3, ... em scaling is affected as well, making headings too big
      p {
        font-size: 18px;
      }
      ul {
        font-size: 18px;
      }

      img {
        border-radius: $border_radius_large;
      }
    }
  }

  .DfSpacePreviewOnPostPage > .DfSegment {
    @extend .DfBookPage;
  }

  .DfCommentSection {
    margin-top: $space_small;
  }
}

.DfPostName {
  @extend .DfUnboundedTitle;
  margin-top: 0;
  margin-bottom: $space_big;
  margin-right: $space_normal;
  line-height: 1.25;
  color: $color_font_normal;
  font-size: $font_huge;
}

.DfPostImage {
  max-width: 100%;
  margin-bottom: $space_normal;
  border-radius: $border_radius_large;
}

.DfMenuSpaceLink {
  color: $color_secondary;
  padding: $space_tiny;
  padding-left: $space_normal;
  display: block;

  .ProfileDetails {
    .DfAvatar.space {
      margin-right: 0;
    }

    .content {
      padding: 0;
      padding-left: 0.5rem;
    }

    .handle {
      margin-right: 0;
    }
  }
}

.ProfilePreviews,
.FullProfile {
  .item {
    .image {
      padding: 0 !important;
    }

    .description {
      font-size: $font_normal;
    }
  }

  .ant-dropdown-trigger {
    margin-left: $space_tiny;
    height: min-content;
  }
}

.HideScrollbar {
  /* Hide scrollbar for Chrome, Safari and Opera */
  &::-webkit-scrollbar {
    display: none;
  }
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
}

.ant-dropdown-trigger {
  height: min-content;
}

.ProfilePreviews {
  &.ui.list > .item:first-child {
    padding-top: $space_small;
  }

  &.ui.list > .item:last-child {
    padding-bottom: $space_small;
  }
}

.DfPreview {
  align-items: center;
  .content {
    display: flex;
    align-items: center;
  }
}

.ProfileDetails {
  .content {
    padding: 0 $space_small;
  }

  .button {
    max-height: 2.5rem;
  }

  .handle {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    display: flex;
    margin-right: $space_tiny;

    .button {
      padding: $space_tiny $space_small;
    }
  }
}

.ant-popover {
  .ProfileDetails {
    .content {
      max-width: 330px;
      padding: 0;
      padding-left: $space_mini;
    }

    .DfPopup-about {
      color: $color_font_normal;
    }
  }
}

.DfIdentityIcon {
  margin-right: 0.5rem;
  cursor: pointer !important;
  border: 1px solid $color_light_border;
  background: #fff;
  border-radius: 100%;
  flex-shrink: 0;
}
.DfIdentityIconContent {
  cursor: pointer !important;
}

.EditEntityBox {
  width: 100%;
  /* max-width: 600px; */

  .EditEntityForm {
    width: 100%;
  }
}

.ui--AddressComponents-info div {
  vertical-align: top;
}

.ui.threaded.comments .comment .comments {
  padding: 0 0 0 $space_large;
  margin: -1rem 0 0 $space_large;
}

form.ui.form.DfForm.EditEntityForm {
  margin-bottom: $space_huge;

  .EPadvanced {
    margin-bottom: $space_normal;
    padding-bottom: $space_normal;

    .EPadvacedTitle {
      cursor: pointer;
      font-size: $font_normal;
      font-weight: 700;
    }
  }

  .ETGtag {
    background: '#fff';
    border-style: dashed;
  }
}

.ui.basic.button:not(.disabled) {
  background-color: #fff;
}

.DfNoVoters {
  text-align: center;
  background-color: #fff;
  padding: 1rem;
}

.ui.img.avatar {
  width: initial;
  height: initial;
}

.ui.dropdown {
  margin: 0;
  display: flex;
  width: auto;
  height: min-content;
  width: initial;

  i {
    color: $color_muted;
  }

  .ui.selection.dropdown.menu {
    padding: 0.5rem 0.75rem !important;
  }
}

hr {
  border: 0;
  border-bottom: 1px solid $color_light_border;
}

.disable,
.disable:hover {
  color: $color_muted;
  text-decoration: none !important;
  cursor: default !important;
}

.DfDate {
  width: 100%;
  font-size: $font_small;
}

.DfSocialLinks {
  margin-top: $space_small;
  font-size: $font_big;

  a {
    margin-right: $space_small;
  }
}

.asLink {
  color: $color_primary;
  text-decoration: none;
  background-color: transparent;
  outline: none;
  cursor: pointer;
  @extend .DfLinkOnHover;
}

.DfSpaceStats {
  margin-top: $space_small;

  .DfStatItem {
    margin-right: $space_huge;

    &:last-child {
      margin-right: 0;
    }
  }
}

.DfSpaceBody {
  display: flex;
  width: 100%;

  .handle {
    max-width: 30rem;
  }

  .description {
    color: $color_font_normal;
  }
}

.ui.attached:not(.message) + .ui.attached.segment:not(.top) {
  border: none;
}

.DfCountsPreview {
  display: flex;
  justify-content: flex-start;

  & > a,
  & > span {
    color: $color_muted;
    font-size: $font_small;
    margin-left: $space_normal;
  }
}

.ui--AddressComponents-address {
  @extend .DfBoldBlackLink;
}

.DfPostPreview {
  display: flex;
  flex-direction: column;

  .ui.button {
    min-width: initial;
    max-height: initial;
  }

  .DfCommentSection {
    margin: 0;
  }
}

.DfRow {
  display: flex;
  justify-content: space-between;
}

.DfActionsPanel {
  width: 100%;
  display: flex;
  align-items: center;
  gap: $space_big;

  > * {
    padding: 0;
    height: auto;
  }

  &.DfActionBorder {
    border-top: 1px solid rgba(34, 36, 38, 0.15);
  }
}

.DfAction {
  display: flex;
  justify-content: center;
  align-items: center;
  font-weight: bold;
  font-size: $font_normal;
  background-color: transparent;
  border: none;
  @extend .DfNoBoxShadow;

  &:hover,
  &:active,
  &:focus {
    cursor: pointer;
    background-color: transparent;
  }
}

.DfSharedSummary {
  .DfPostBody {
    margin-bottom: $space_large;
  }
}

.DfSegment.DfPostPreview {
  padding-bottom: $space_normal;

  .DfInfo {
    width: -webkit-fill-available;
  }

  .DfContent {
    color: $color_font_normal;
    margin: $space_normal 0;
    cursor: pointer;
  }

  .DfSharedSummary {
    .DfSegment {
      margin-top: 0;
      margin-bottom: 0;
      @extend .DfNoBoxShadow;
      border: 1px solid $color_light_border;
    }
  }
}

.DfPostImagePreviewWrapper {
  width: 100%;
  margin-bottom: $space_normal;
  border-radius: $border_radius_normal;
  overflow: hidden;
  border: 1px solid $color_light_border;
  background-color: #f0f0f0;
}

.DfPostImagePreview {
  cursor: pointer;
  object-fit: cover;
}

.DfPostImagePreviewWrapperCropped {
  position: relative;
  padding-top: calc(9 / 16 * 100%);

  .DfPostImagePreview {
    inset: 0;
    position: absolute;
    height: 100%;
    width: 100%;
  }
}

.DfGreyLink {
  color: $color_muted !important;
  cursor: pointer;
  word-break: break-all;

  a {
    color: $color_muted !important;
    cursor: pointer;
  }
}

.DfGreyLink:hover {
  a {
    color: $color_muted !important;
    text-decoration: underline;
  }

  color: $color_muted !important;
  text-decoration: underline;
}

.DfMutedLink {
  color: $color_muted;

  &:hover {
    color: $color_link !important;
  }
}

.DfSelectedSpace {
  background-color: #e6f7ff;
  color: #1890fe;
  border-right: 2px solid #1890f3;
}

.DfBgImg {
  background-size: cover;
  background-position: center;
  object-fit: cover;
}

.text.muted,
.text.grey {
  color: $color_muted;
}

.text.smaller {
  font-size: $font_small;
}

.Df--AddressComponents-details {
  color: $color_muted !important;
  font-size: $font_small;
  font-weight: normal;
}

.ui--AddressComponents {
  display: flex;

  .ui--IdentityIcon {
    margin-left: 0;
    margin-right: $space_small;
  }

  .AddressComponents.follow {
    float: right;

    .button {
      margin: 0;
    }
  }

  .ui--AddressComponents-info {
    display: flex;
    align-items: center;
  }

  .Df--AddressComponents-details {
    display: block;
  }

  .ui--AddressSummary-name,
  .ui--AddressSummary-balance {
    display: inline-flex;
    padding-top: 0;
    margin-right: 0 !important;
    font-size: $font_small !important;
    margin-right: $space_normal;
    color: $color_muted;
  }
}

.DfSection {
  .viewspace-minipreview {
    display: flex;
    justify-content: space-between;
    width: 70%;
  }

  .DfSection-title {
    border-bottom: 1px solid $color_light_border;
    display: flex;
    align-items: center;
  }

  li.ant-list-item.ant-list-item-no-flex {
    border: none;
    padding: 0;

    .DfCommentSection & {
      padding-top: $space_tiny;
    }
  }
}

.DfSectionOuterContainer {
  display: flex;
  justify-content: center;
  align-items: flex-start;
  gap: $space_normal;
}

@media (min-width: 767px) {
  .DfSectionOuter {
    min-width: $min_width_content;
    max-width: $max_width_content;
    width: $max_width_content;
    padding-bottom: 0;
    position: relative;
    z-index: 0;

    .DfSectionOuter {
      width: 100%;
    }
  }

  .DfSection {
    margin: 0;
  }
}

.DfForm .ui--Labelled {
  align-items: end;

  & > label {
    padding-top: $space_small;
  }
}

.ui.top.left.flowing.popup.transition.visible {
  .ui--AddressComponents-address {
    font-size: $font_large;
  }

  .Df--AddressComponents-details {
    margin-right: $space_mini;
  }
}

.DfAvatar {
  display: inline-block;
  border-radius: 50%;
  vertical-align: middle;
  border: 1px solid $color_light_border;
  background-color: white;

  &.space {
    margin-right: $space_tiny;
  }
}

.ui.top.left.flowing.popup.transition.visible {
  .DfAvatar {
    margin: 0 $space_tiny $space_tiny 0;
  }
}

.ProfileDetails.DfPreview {
  display: flex;
  align-items: center;
  height: stretch;
}

.DfPopup-handle {
  font-size: $font_normal !important;
  color: #4e4e4e;
  margin: $space_mini 0;
}

.DfPopup-about {
  margin: $space_tiny 0;
}

.DfPopup-links {
  color: $color_muted;
  display: flex;
  justify-content: flex-start;
  margin: 0;
  margin-bottom: $space_tiny;

  .DfPopup-link {
    font-size: $font_normal;
    margin-right: $space_normal;
    @extend .DfGreyLink;
  }
}

.DfMdEditor {
  .CodeMirror {
    font-size: 1rem;
    padding: 6.5px 11px; /* padding from ant design input */
  }

  .CodeMirror-scroll {
    min-height: 5rem !important;
  }

  .CodeMirror.cm-s-easymde.CodeMirror-wrap.CodeMirror-fullscreen {
    z-index: 1000;
  }

  .markdown-body {
    a {
      color: $color_link !important;
    }

    background-color: #fff !important;
    padding: $space_mini !important;
  }

  &.hideToolbar {
    .editor-toolbar {
      display: none;
    }

    .CodeMirror {
      border-radius: $border_radius_normal;
    }
  }

  .editor-statusbar {
    padding: $space_mini 0;
    text-align: left;

    .upload-image {
      margin-left: 0;
      font-size: $font_small;
    }
  }
}

.DfMdEditor.error {
  .CodeMirror.cm-s-easymde.CodeMirror-wrap {
    background-color: #fff6f6;
    border-color: #e0b4b4;
  }

  .editor-toolbar {
    border-color: #e0b4b4;
  }
}

.ui.attached.tabular.menu {
  padding: 0 $space_huge;
}

.ant-btn {
  font-weight: $font_weight_medium;
}

.DfSearch {
  width: 450px;
  display: flex;
  margin: 0 $space_huge;

  .ant-input-search > .ant-input-group > .ant-input-group-addon {
    left: -1px;
    padding: 0;
    border: 0;
  }
  .ant-btn-icon-only {
    border-top-left-radius: 0 !important;
    border-bottom-left-radius: 0 !important;
  }

  .ant-input-affix-wrapper {
    height: 32px;
    padding: 2px 2px !important;
  }
}

.DfBgColor {
  background-color: $color_page_bg;
}

.DfHeader {
  background: #fff;
  padding: 0 $space_normal;
  border-bottom: 1px solid $color_light_border;
  position: fixed;
  z-index: 12;
  width: 100%;
  display: flex;
  justify-content: space-between;

  /* Fix black background of top menu in prod mode: */
  &.ant-layout-header {
    line-height: normal;
    padding: 0 0.5rem !important;
    background-color: #fff;
  }
}

.ant-layout {
  background-color: $color_page_bg;
}

.DfDataList {
  margin-top: $space_tiny;

  .DfSegment {
    margin: $space_normal 0;
  }

  .ant-list-pagination {
    display: flex;
    justify-content: center;
  }
}

.DfEmpty {
  padding: $space_big;
}

.DfTitle--List {
  display: flex;
  justify-content: space-between;
  width: 100%;
}

.DfSideMenu--FollowedSpaces {
  .SpaceMenuIcon {
    margin-left: -$space_mini;
  }

  &.collapsed {
    .MenuItemName {
      display: none;
    }
  }

  color: #666;
  cursor: pointer;

  .ant-menu-item-group-title {
    text-align: center;
    text-transform: uppercase;
    font-size: $font_small;
  }
}

.DfSider {
  overflow-y: auto;
  left: 0;

  .ant-layout-sider-children {
    position: fixed;
    height: 100%;
    background: #fff;
    border-right: 1px solid $color_light_border;
    /* Hide scrollbar for Chrome, Safari and Opera */
    &::-webkit-scrollbar {
      display: none;
    }
    -ms-overflow-style: none; /* IE and Edge */
    scrollbar-width: none; /* Firefox */
  }

  .ant-menu-item:not(:last-child) {
    margin-bottom: 4px;
  }

  .ant-menu-item .anticon {
    font-size: $font_normal !important;
  }

  .ant-badge {
    margin-left: $space_mini;
  }

  .ant-menu-item-active {
    .MenuItemName {
      color: $color_primary !important;
    }
  }

  .ant-menu-item-selected {
    .MenuItemName {
      color: $color_primary !important;
    }
  }

  .MenuItemName {
    color: $color_muted;
  }
}

.ant-list-something-after-last-item
  .ant-spin-container
  > .ant-list-items
  > .ant-list-item:last-child {
  border: none;
}

.ellipsis {
  text-overflow: ellipsis;

  /* Required for text-overflow to do anything */
  white-space: nowrap;
  overflow: hidden;
}

.DfMenuItem {
  padding-left: $space_huge !important;
  img {
    transition: filter 0.3s;
    filter: grayscale(1) opacity(0.7);
  }
  svg {
    transition: filter 0.3s;
    filter: grayscale(1) opacity(0.7);
  }
  &.ant-menu-item-only-child:hover,
  .ant-menu-submenu-title:hover,
  &.ant-menu-submenu-selected,
  &.ant-menu-item-selected {
    img {
      transition: filter 0.3s;
      filter: grayscale(0) opacity(1);
    }
    svg {
      transition: filter 0.3s;
      filter: grayscale(0) opacity(1);
    }
  }
}

.DfTopBar {
  width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;

  .DfCloseSearchIcon {
    padding-left: $space_tiny;
  }

  .DfTopBar--leftContent,
  .DfTopBar--rightContent {
    flex-grow: 1;
    flex-basis: 0;
  }

  .DfTopBar--leftContent,
  .DfTopBar--rightContent,
  .DfTopBar--search {
    display: flex;
    align-items: center;
  }

  .DfTopBar--rightContent {
    justify-content: flex-end;
    > * {
      margin-right: $space_large;

      &:last-child {
        margin-right: 0;
      }
    }
  }
}

/* Fix syntax error in Markdown editor */
.CodeMirror .cm-spell-error:not(.cm-url):not(.cm-comment):not(.cm-tag):not(.cm-word) {
  background: none !important;
}

// a.DfStatItem {
//   color: $color_muted !important;
// }

.DfStatItem {
  color: $color_muted !important;
  font-size: $font_normal;
  margin-right: $space_large;
  display: inline-block;

  &:hover {
    color: $color_link !important;
  }
}

.DfSpaceTitle {
  margin-bottom: $space_small;

  a {
    @extend .DfBlackLink;
  }

  .ui.dropdown {
    margin-left: $space_tiny;
  }
}

.DfModal {
  text-align: left;
  margin: 1rem;

  content {
    min-width: 75%;
  }
}

.NavEditorWrapper {
  display: flex;
  justify-content: space-between;
}

.NavigationEditor .NERow {
  display: flex;
  justify-content: space-between;
  margin-left: 0;
  margin-bottom: $space_big;
  position: relative;
  flex-direction: column;
  border-bottom: 1px solid $color_light_border;
}

.NavigationEditor .NERow:last-child {
  border-bottom: none;
}

.NavigationEditor .NEText {
  color: $color_font_normal;
  font-style: normal;
  font-weight: 500;
  font-size: $font_normal;
  margin-right: $space_huge;
  width: 16rem;
  margin-top: $space_big;
}

.NavigationEditor .NavigationEditorForm {
  display: flex;
  flex-direction: column;
}

.NavigationEditor .NavigationEditorForm input,
.NavigationEditor .NavigationEditorForm select {
  margin-right: $space_huge !important;
  height: 3rem !important;
}

.NavigationEditor .NESelectType {
  width: 50%;
}

.NavigationEditor .NavigationEditorForm .NEHidden {
  input,
  select {
    color: $color_muted !important;
  }
}

.NavigationEditor .NEButtonsWrapper {
  display: flex;
  flex-direction: column;
  margin: $space_huge 0;
}

.NavigationEditor .NERemoveButton button:hover {
  background-color: #ff0000;
  border-color: #d9d9d9;

  span {
    color: #fff;
  }
}

.NavigationEditor .NEHideButton {
  margin-bottom: $space_normal;

  button {
    margin-right: $space_huge;
  }
}

.NavigationEditor .NEAddTab {
  @extend .DfLinkOnHover;
  background-color: #fff;
  display: flex;
  border-radius: 0.28571429rem;
  line-height: 1.21428571rem;
  padding: 0.67857143rem 1rem;
  max-width: 15.2rem;
  width: 100%;
  justify-content: center;
  border: 1px dashed #d9d9d9;
}

.NavigationEditor .NESubmit {
  max-width: 8.5rem;
  width: 100%;

  span {
    color: #fff !important;
  }
}

.NavigationEditor .NETagsWrapper {
  width: 100%;

  input {
    height: $space_big !important;
  }
}

.NavigationEditor .NEErrorMessage {
  position: absolute !important;
  top: 5.5rem;
  left: 6rem;
}

.NavigationEditor .NEAutoCompleteItem {
  position: absolute;
}

.RNTListItem {
  padding: 0 $space_normal;

  &:hover {
    background-color: #eee;
    border-radius: $border_radius_normal;
  }

  .ant-list-item-meta-title {
    font-weight: bold !important;
  }
}

.RNTIcon {
  transform: rotate(90deg);
  margin-right: $space_normal;
  color: #ccc;
}

.SpaceNav {
  .SNhead {
    display: flex;
    flex-direction: column;
    padding: $space_big;
    background-color: #fff;
    border: 1px solid $color_light_border;
    box-sizing: border-box;
    border-radius: $border_radius_normal;
    margin: 0 0 $space_big 0;
    padding: $space_big;

    .SNavatar {
      margin: auto;

      img {
        width: 100%;
        border-radius: 10rem;
      }
    }

    .SNheadTitle {
      font-weight: 500;
      font-size: $font_big;
      line-height: $space_huge;
      margin: $space_normal 0;
      text-align: center;
    }

    .SNheadDescription {
      margin-top: $space_normal;
    }

    .SNheadButton {
      margin: auto;

      &.unfollowed span {
        color: #fff;
      }
    }
  }

  .SNmenu {
    border: 1px solid $color_light_border;
    box-sizing: border-box;
    border-radius: $border_radius_normal;
    margin-bottom: $space_big;
    width: 100% !important;
  }

  .SpaceNavSettings {
    display: flex;
    justify-content: flex-end;
    margin: $space_tiny;

    a {
      @extend .DfBlackLink;
    }
  }
}

.DfNotificationItem {
  display: flex;
  width: 100%;
  color: $color_font_normal;
  margin-bottom: $space_normal;

  .DfNotificationContent {
    margin: 0 $space_tiny;
    width: inherit;
  }

  .DfNotificationIcons {
    display: flex;
    align-items: center;
    height: min-content;

    .DfNotificationIcon {
      font-size: $font_large;
      color: $color_muted;
      padding-right: $space_normal;
    }
  }

  a {
    @extend .DfBlackLink;
    font-weight: bold;
  }

  &:hover {
    cursor: pointer;
  }
}

.DfStep {
  button,
  a {
    padding: 0;
    font-size: $font_normal;
    font-weight: bolder;
    color: #222;
  }
}

.ant-steps-item-title {
  font-size: $font_normal;
}

.DfAccountTitle {
  display: flex;
  align-items: center;
}

.DfAddressInfo {
  text-align: left;
  width: 100%;
}

.DfAccountTitleBreakWord {
  word-wrap: break-word;
  white-space: pre-wrap;
  word-break: break-word;
}

.DfChooseAccount {
  display: flex;
  align-items: center;

  .DfAddressInfo {
    display: block;
  }
}

.SelectAccountSection {
  max-height: 15rem;
  overflow-y: auto;

  .SelectAccountItem {
    padding: $space_tiny;
    padding-left: $space_normal;
    cursor: pointer;
    height: 'auto';

    .DfDisabled {
      .ant-btn-disabled,
      .ant-btn.disabled,
      .ant-btn[disabled] {
        cursor: default;
        border: none;
        background-color: none;
      }
    }
  }

  .SelectAccountItem:hover {
    background-color: $color_pink_bg;
    color: $color_link;
  }
}

.DfCurrentAddress {
  display: flex;
  cursor: pointer;

  .DfAddressIcon {
    .ui--IdentityIcon {
      display: block;
    }
  }

  .DfAddressInfo {
    display: flex;
    flex-direction: column;
    line-height: normal;

    a {
      @extend .DfBlackLink;
    }

    .anticon-caret-down {
      margin-left: $space_tiny;
    }
  }
}

.DfError {
  color: red;
}

.DfNewComment {
  .ant-comment-content {
    .AnimatedVisibility {
      transition: visibility 0.2s, opacity 0.2s;
      visibility: hidden;
      opacity: 0;
    }

    &:hover {
      .AnimatedVisibility {
        visibility: visible;
        opacity: 1;
      }
    }
  }

  .ant-comment-inner {
    padding-top: 0;
    padding-bottom: 0;

    /* &:hover {
      button {
        // color: $color_font_normal;
      }
    } */
  }

  .ant-comment-avatar {
    display: none;
  }

  .ant-comment-actions {
    margin-top: $space_mini;
    margin-bottom: $space_tiny;

    li {
      span,
      button {
        font-size: $font_small;
        // color: $color_muted;
      }

      button,
      button:hover,
      button:active,
      button:focus {
        cursor: pointer;
        background: transparent;
        border: none;
        @extend .DfNoBoxShadow;
        // color: $color_link;
      }
    }
  }

  .ant-comment-content-author-name {
    font-size: $font_small;
    line-height: inherit;

    .DfAuthorBlock {
      display: flex;

      .anticon-ellipsis.ant-dropdown-trigger {
        margin-left: $space_big;
      }
    }
  }

  .ant-comment-nested {
    // box-shadow: -1px 0 0 rgba(34, 36, 38, 0.15);
    margin-left: $space_normal;
    padding-left: $space_normal;
  }

  .DfActionButtonsBlock {
    margin: $space_tiny 0;
  }
}

.anticon-ellipsis.ant-dropdown-trigger {
  font-size: $font_normal + 0.25rem;
}

.DfCommentSection {
  &.TopBorder {
    border-top: 1px solid $color_light_border;
  }

  margin-bottom: $space_normal;

  h3 {
    margin: $space_small 0;
  }

  .DfActionButtonsBlock {
    margin: $space_small 0;
  }
}

.DfCommentAction {
  cursor: pointer;
  color: $color_muted;

  &:hover {
    color: $color_link !important;
  }
}

.DfPanel {
  margin: 0 $space_normal;
  width: $width_panel;
}

.DfCard {
  @extend .DfBoxShadowLight;
  background-color: #fff;
  padding: $space_big;
  border-radius: $border_radius_huge;
}

.DfMobileOnBoarding {
  @extend .DfBoxShadow;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: space-between;
  background: #fff;
  line-height: 0.6rem;
  padding: $space_normal;
  margin-bottom: $space_small;
}

.DfButtonGroupRoot {
  display: flex;
  justify-content: center;
  align-items: center;
  button:first-child {
    margin-right: 1rem;
  }
}

.DfButtonAsMenuItem {
  color: inherit !important;
  padding-left: 0 !important;
  transition: none !important;
  -webkit-transition: none !important;
}

.DfSignInModal {
  .ant-modal-header {
    border-bottom: none;
    padding: $space_normal $space_big;
  }

  .ant-modal-footer {
    padding: $space_normal $space_big $space_big;
    border-top: none;
  }

  .ant-modal-content {
    max-height: 700px;
    border-radius: $space_normal;
    overflow: hidden;
    display: flex;
    flex-direction: column;
  }

  .ant-divider-inner-text:first-of-type {
    margin-top: 0;
    padding-top: 0;
  }

  .ant-modal-close-x {
    margin-top: $space_mini;
    margin-right: $space_tiny;
  }

  .ant-divider-inner-text {
    color: $color_muted;
    font-size: $font_normal;
  }

  .ant-modal-body {
    @extend .scrollbar;
    padding: 0;
    overflow-x: hidden !important;
  }

  .ant-menu {
    margin-top: 0 !important;
  }
}

.DfAccountMenu {
  .ant-drawer-body {
    padding-left: 0;
    padding-right: 0;
  }
}

.DfActivityMsg {
  color: $color_font_normal !important;
}

.DfHoverIcon {
  font-size: $font_big !important;
  color: $color_muted;

  &:hover {
    color: $color_link_hover !important;
  }
}

.DfNotificationsCounter {
  .bell {
    &:hover {
      color: $color_link_hover !important;
    }
    font-size: $font_big;
    color: $color_muted;
  }

  .ant-badge-not-a-wrapper .ant-scroll-number {
    position: absolute;
    top: -$space_big;
    right: -$space_big;
  }
}

.DfLoadingPageProgressBar {
  &.ant-progress-line {
    position: absolute;
    left: -10px;
    width: 110%;
    font-size: 0px;
    top: 65px;
  }
}

.DfFiltersCommon {
  max-width: 748px;
  margin: 0 -18px 0 -18px;
  background-color: $color_page_bg;
  box-shadow: 0px 21px 12px -19px #ddd;
}

.ant-affix {
  .DfFilters {
    @extend .DfFiltersCommon;
    opacity: 0;
    padding: $space_small 22px $space_small 22px;
  }
  &:hover {
    .DfFilters {
      animation: ShowDateFilter 0.4s forwards;
    }
  }
}

.DfBurgerIcon {
  color: $color_muted;
}

@media (max-width: 755px) {
  .ant-affix {
    .DfFilters {
      @extend .DfFiltersCommon;
      padding: $space_small 14px $space_small 14px;
      opacity: 100;
      position: relative;
    }
    &:hover {
      .DfFilters {
        animation: none;
      }
    }
  }
}

@keyframes ShowDateFilter {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 50;
  }
  100% {
    opacity: 100;
  }
}

.FollowerCanPostAlert {
  margin-bottom: $space_normal;
}

.DfToolbar {
  padding: $space_mini;
  padding-left: 0;
  align-items: center;
  button {
    margin-right: $space_mini !important;
  }
}

.ProseMirror {
  padding: 0 $space_mini;
  font-size: $font_normal;
  overflow: auto;
  margin-top: $space_mini;
}

.scrollbar::-webkit-scrollbar {
  background-color: transparent;
  width: 0.375rem;
  height: 0.375rem;
}

.scrollbar::-webkit-scrollbar-thumb {
  background-color: rgba(100, 116, 139, 0.16);
  border-radius: 0.25rem;
}

.ant-form-item-explain {
  margin-top: 4px;
}

@media screen and (max-width: 768px) {
  .sm-hidden {
    display: none !important;
  }
}
